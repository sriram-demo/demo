
name: "Trigger All Test"
run-name: Testing on ${{ github.event.inputs.pod_id }}

on:
  workflow_dispatch:
    inputs:
      pod_id:
        type: choice
        description: 'Pod ID in which test has to trigger'     
        required: true
        options:
        - mdmnext-prod-apse1
        - mdmnext-prod-apse1dr
        - mdmnext-prod-azemc1
        - mdmnext-prod-azemc1dr
        - mdmnext-prod-aznttjp1
        - mdmnext-prod-aznttjp1dr
        - mdmnext-prod-azusw3
        - mdmnext-prod-azusw3dr
        - mdmnext-prod-emw1
        - mdmnext-prod-emw1dr
        - mdmnext-prod-nac1
        - mdmnext-prod-nac1dr
        - mdmnext-prod-uk1
        - mdmnext-prod-uk1dr
        - mdmnext-prod-use2
        - mdmnext-prod-use2dr
        - mdmnext-prod-use2s1
        - mdmnext-prod-use4
        - mdmnext-prod-use4dr
        - mdmnext-prod-use4s1
        - mdmnext-prod-use6
        - mdmnext-prod-use6dr
        - mdmnext-prod-usw3
        - mdmnext-prod-usw3dr
        - mdmnext-prv-c360
        - mdmnext-prv-c360s1
        - mdmnext-prv-c360s2
        - mdmnext-stage-azusw1
        - mdmnext-stage-azusw1dr
        - mdmnext-stage-pod1s2
        - mdmnext-stg-pod1
        - mdmnext-stg-pod1dr
        - mdmnext-stg-pod1s1
        - mdmnext-stg-pod1s1dr
        
jobs:        
  source_activate:
    name: Testing on ${{ github.event.inputs.pod_id }}
    runs-on: ubuntu-latest
    outputs:
      working-directory: ${{ steps.source_activate.outputs.working-directory }}
    steps:      
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0     
          token: ${{ github.token }}   
        
      - name: Source activate
        id: source_activate
        env:
          folder_id: ${{ github.event.inputs.pod_id }}
          TERM: xterm
        run: | 
          sudo chmod -R 777 ${{ github.workspace }}
          cat <<EOF | bash
          [[ ":$PATH:" != *":\$(pwd):"* ]] && PATH="\$(pwd):${PATH}"
          source activate "$folder_id" 
          ./mops build mdm
          cd build/$(cat "$folder_id"/env | grep "POD_ID" | awk -F "=" '{print $2}' | tr -d '"')/mdm
          echo ::set-output name=working-directory::"build/$(cat "$folder_id"/env | grep "POD_ID" | awk -F "=" '{print $2}' | tr -d '"')/mdm"
          EOF
        continue-on-error: true
  initialize_runners:
    name: Initialize Dynamic Runners
    runs-on: ubuntu-latest
    needs: [source_activate]
    steps:
      - name: Initialize Runners
        env:
          TERM: xterm
        run: |
          sudo systemctl start actions.runner.infacloud-mdmnext-configs.${{runner.name}}-2.service
          sudo systemctl status actions.runner.infacloud-mdmnext-configs.${{runner.name}}-2.service
        continue-on-error: true
  c360_test_run:
    if: (needs.source_activate.result == 'success')
    name: C360 test
    runs-on: ubuntu-latest
    needs: [source_activate,initialize_runners]
    steps:
      - name: running c360 test
        env:
          folder_id: ${{ github.event.inputs.pod_id }}
          TERM: xterm
          working-directory: ${{ needs.source_activate.outputs.working-directory }}
        run: |
          sleep 50
        continue-on-error: true
           
  rdm_test_run:
    if: (needs.source_activate.result == 'success')
    name: RDM test
    runs-on: ubuntu-latest
    needs: [source_activate,initialize_runners]
    steps:
      - name: running RDM test
        env:
          folder_id: ${{ github.event.inputs.pod_id }}
          TERM: xterm
          working-directory: ${{ needs.source_activate.outputs.working-directory }}
        run: |
          sleep 20
        continue-on-error: true
   
  shm_test_run:
    if: (needs.rdm_test_run.result == 'success' || needs.rdm_test_run.result == 'failure')
    name: SHM test
    runs-on: ubuntu-latest
    needs: [rdm_test_run,source_activate]
    steps:
      - name: running SHM test
        env:
          folder_id: ${{ github.event.inputs.pod_id }}
          TERM: xterm
          working-directory: ${{ needs.source_activate.outputs.working-directory }}
        run: |
          sleep 5
        continue-on-error: true
  
  terminate_runners:
    if: ${{ github.actor != 'github-actions' }}
    name: Terminate Dynamic Runners
    runs-on: ubuntu-latest
    needs: [shm_test_run]
    steps:
      - name: Terminate Runners
        env:
          TERM: xterm
        run: |
          sudo systemctl stop actions.runner.infacloud-mdmnext-configs.${{runner.name}}-2.service
        continue-on-error: true
  
        
