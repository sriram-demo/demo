name: "Monthly Release Pipeline"
on:
  push:
    paths:
      - mdmnext-stg-pod1/**/*
      - mdmnext-stg-pod1s1/**/*
      - mdmnext-prv-*/**/*
      - mdmnext-prod-uk1/**/*
      - mdmnext-prod-apse1/**/*
      - mdmnext-prod-emw1/**/*
      - mdmnext-prod-nac1/**/*
      - mdmnext-prod-use2/**/*
      - mdmnext-prod-use4/**/*
      - mdmnext-prod-use4s1/**/*
      - mdmnext-prod-usw3/**/*
      - mdmnext-prod-use6/**/*
      - mdmnext-prod-azemc1/**/*
      - mdmnext-prod-azusw3/**/*
      - mdmnext-prod-aznttjp1/**/*
      - mdmnext-stage-azusw1/**/*
    branches:
      - main
jobs:        
  generate_matrix:
    runs-on: ubuntu-latest
    name: Generating Deployment Stages
    outputs:
      label_check: ${{ steps.check_pr_labels.outputs.result }}
      labels: ${{ steps.check_pr_labels.outputs.labels }}
      jobs: ${{ steps.generate.outputs.matrix }}
      ft-branch: ${{ steps.generate.outputs.ft-branch }}
      userconfirmation: ${{ steps.check_pr_labels.outputs.userconfirmation }}
    steps:
    - name: Check
      id: check_pr_labels
      uses: Srirammkm/check-labels@main
      with:
        github-token: ${{ secrets.TOKEN }}
        labels: '["monthly-release"]'
      continue-on-error: true
      
    - name: All Labels
      id: generate
      run: |
        jobs='${{ steps.check_pr_labels.outputs.jobs }}'
        echo $jobs
        echo ${{ steps.check_pr_labels.outputs.labels }}
        echo "matrix={\"include\":$jobs}" >> $GITHUB_OUTPUT
    - name: Print ouptut
      run: |
        echo ${{ steps.out.outputs.matrix }}    
  cai_pd:
    if: contains(needs.generate_matrix.outputs.labels, 'cai-pd')
    name: CAI Post Deployment
    runs-on: ubuntu-latest
    needs: [generate_matrix]
    steps:
      - name: CAI Post Deployment
        env:
          folder_id: ${{ github.event.inputs.pod_id }}
          working_directory: ${{ needs.source_activate.outputs.working_directory }}
          TERM: xterm
        run: |
          source activate "$folder_id" 
          cd ${{ env.working_directory}}
          ./bin/tools/run-cai-post-deploy.sh
        continue-on-error: true

  deployment_checkpoint:
    if: |
      always() &&
      (needs.cai_pd.result == 'success' || needs.cai_pd.result == 'skipped')
    name: Proceeding with ${{ needs.generate_matrix.outputs.userconfirmation }} deployment
    runs-on: ubuntu-latest
    environment:
      name: manual
    needs: [generate_matrix,cai_pd]
    steps:
      - name: Proceeding with deployment process
        run: |
          echo "Proceeding with ${{ needs.generate_matrix.outputs.userconfirmation }} deployment"
 
  deployment_stages:
    if: always()
    name: ${{ matrix.job_name }}
    needs: [generate_matrix,cai_pd,deployment_checkpoint]
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.generate_matrix.outputs.userconfirmation }}
    timeout-minutes: 360 # 6 hour timeout
    strategy:
      matrix: ${{ fromJson(needs.generate_matrix.outputs.jobs) }}
      max-parallel: 1 # Run jobs serially
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0     
          token: ${{ github.token }} 
          
      - name: ${{ matrix.name }}
        env:
          TERM: xterm
          GH_TOKEN: ${{ github.token }}
          PR:  ${{ needs.generate_matrix.outputs.ft-branch }}
        run: |
          ${{ matrix.command }}
