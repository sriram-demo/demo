name: "Monthly Release Pipeline"
on:
  push:
    paths:
      - mdmnext-stg-pod1/**/*
      - mdmnext-stg-pod1s1/**/*
      - mdmnext-prv-*/**/*
      - mdmnext-prod-uk1/**/*
      - mdmnext-prod-apse1/**/*
      - mdmnext-prod-emw1/**/*
      - mdmnext-prod-nac1/**/*
      - mdmnext-prod-use2/**/*
      - mdmnext-prod-use4/**/*
      - mdmnext-prod-use4s1/**/*
      - mdmnext-prod-usw3/**/*
      - mdmnext-prod-use6/**/*
      - mdmnext-prod-azemc1/**/*
      - mdmnext-prod-azusw3/**/*
      - mdmnext-prod-aznttjp1/**/*
      - mdmnext-stage-azusw1/**/*
    branches:
      - main
jobs:        
  generate_matrix:
    runs-on: ubuntu-latest
    name: Generating Deployment Stages
    outputs:
      label_check: ${{ steps.check_pr_labels.outputs.result }}
      labels: ${{ steps.check_pr_labels.outputs.labels }}
      matrix: ${{ steps.generate.outputs.matrix }}
    steps:
    - name: Check
      id: check_pr_labels
      uses: Srirammkm/check-labels@main
      with:
        github-token: ${{ secrets.TOKEN }}
        labels: '["monthly-release"]'
      continue-on-error: true
      
    - name: All Labels
      id: generate
      run: |
        jobs='${{ steps.check_pr_labels.outputs.jobs }}'
        echo $jobs
        echo ${{ steps.check_pr_labels.outputs.labels }}
        echo "matrix={\"include\":$jobs}" >> $GITHUB_OUTPUT
    - name: Print ouptut
      run: |
        echo ${{ steps.out.outputs.matrix }}
  getpod_master:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && needs.generate_matrix.outputs.label_check == 'true'
    name: Get POD ID
    runs-on: self-hosted
    needs: generate_matrix
    outputs:
      folder_id_master: ${{ steps.folder_id_master.outputs.pod_id }}
    steps:      
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0     
          token: ${{ github.token }}    

      - name: Get Pod ID for master
        id: folder_id_master
        run: |
         pod_id=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "**/*" |  awk -F '/' '{print $1}' | sort | uniq -u | grep -v dr)
         echo $pod_id
         echo "pod_id=$pod_id" >> $GITHUB_OUTPUT
        continue-on-error: true
  initialize_runners:
    name: Initialize Dynamic Runners
    runs-on: ubuntu-latest
    needs: [generate_matrix]
    steps:
      - name: Initialize Runners
        env:
          TERM: xterm
        run: |
          sudo systemctl start actions.runner.infacloud-mdmnext-configs.${{runner.name}}-2.service
          sudo systemctl status actions.runner.infacloud-mdmnext-configs.${{runner.name}}-2.service
        continue-on-error: true
  source_activate:
    name: Source Activate
    runs-on: ubuntu-latest
    needs: [initialize_runners]
    outputs:
      working-directory: ${{ steps.source_activate.outputs.working-directory }}
      mail-host: ${{ steps.source_activate.outputs.mail-host }}
    steps:      
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0     
          token: ${{ github.token }}   
          
      - name: Source Activate
        id: source_activate
        env:
          folder_id: ${{ github.event.inputs.pod_id }}
          TERM: xterm
        run: | 
          sudo chmod -R 777 ${{ github.workspace }}
          cat <<EOF | bash
          [[ ":$PATH:" != *":\$(pwd):"* ]] && PATH="\$(pwd):${PATH}"
          source activate "$folder_id" 
          ./mops build mdm
          working_dir="build/$(cat "$folder_id"/env | grep "POD_ID" | awk -F "=" '{print $2}' | tr -d '"')/mdm"
          mail_host-"$(cat "$folder_id"/mdm/resources/helm/common-config-params.yaml | grep "mail_host" | awk '{print $2}' )"
          echo "working-directory=$working_dir" >> $GITHUB_OUTPUT
          echo "mail-host=$mail_host" >> $GITHUB_OUTPUT
          EOF
        continue-on-error: true
        
  cai_pd:
    if: github.event.inputs.cai_pd_required == 'true'
    name: CAI Post Deployment
    runs-on: ubuntu-latest
    needs: [source_activate]
    steps:
      - name: CAI Post Deployment
        env:
          folder_id: ${{ github.event.inputs.pod_id }}
          working-directory: ${{ needs.source_activate.outputs.working-directory }}
          CAI_ADMIN_USERNAME: ${{ github.event.inputs.cai_username }}
          CAI_ADMIN_PASSWORD: ${{ github.event.inputs.cai_password }}
          TERM: xterm
        run: |
          source activate "$folder_id" 
          cd ${{ env.working-directory}}
          ./bin/tools/run-cai-post-deploy.sh
        continue-on-error: true

  deployment_stages:
    if: always() &&
        (needs.cai_pd.result == 'success' || needs.cai_pd.result == 'skipped')
    name: ${{ matrix.job_name }}
    needs: [source_activate,cai_pd,generate_matrix]
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.release }}-${{ github.event.inputs.userconfirmation }}
    timeout-minutes: 360 # 6 hour timeout
    strategy:
      matrix: ${{ fromJson(needs.generate_matrix.outputs.matrix) }}
      max-parallel: 1 # Run jobs serially
    steps:
      - name: ${{ matrix.name }}
        env:
          TERM: xterm
          folder_id: ${{ github.event.inputs.pod_id }}
          working-directory: ${{ needs.source_activate.outputs.working-directory }}
        run: |
          source activate "$folder_id" 
          cd ${{ env.working-directory}}
          ${{ matrix.command }}
        
